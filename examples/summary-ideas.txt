Updated Clustered Hierarchical Tree:
L1: Agent Architectures
├── L2: Tool-Calling Agents (tool-calling-agent-local.py, rag-agent-testing.py, rewoo.py, reflexion.py, LLMCompiler.py, plan-and-execute.py, web_voyager.py)
│   ├── L3: ReAct Agent (rag-agent-testing.py)
│   │   ├── L4: Retrieve Documents (rag-agent-testing.py:100)
│   │   ├── L4: Grade Document Retrieval (rag-agent-testing.py:108)
│   │   │   ├── L5: LLM Grader (rag-agent-testing.py:110)
│   │   │   └── L5: Tool Selection (rag-agent-testing.py:112)
│   │   ├── L4: Web Search (rag-agent-testing.py:116)
│   │   └── L4: Generate Answer (rag-agent-testing.py:124)
│   ├── L3: Custom LangGraph Agent (rag-agent-testing.py:184)
│   │   ├── L4: Retrieve (rag-agent-testing.py:192)
│   │   ├── L4: Grade Documents (rag-agent-testing.py:210)
│   │   │   ├── L5: LLM Grader (rag-agent-testing.py:212)
│   │   │   └── L5: Tool Selection (rag-agent-testing.py:214)
│   │   ├── L4: Generate (rag-agent-testing.py:220)
│   │   └── L4: Web Search (rag-agent-testing.py:230)
│   ├── L3: ReWOO Agent (rewoo.py)
│   │   ├── L4: Planner (rewoo.py:40)
│   │   │   ├── L5: Tool Selection (rewoo.py:42)
│   │   │   └── L5: Variable Substitution (rewoo.py:44)
│   │   ├── L4: Executor (rewoo.py:74)
│   │   │   ├── L5: Tool Execution (rewoo.py:76)
│   │   │   └── L5: Result Storage (rewoo.py:80)
│   │   └── L4: Solver (rewoo.py:92)
│   │       ├── L5: Plan Reconstruction (rewoo.py:94)
│   │       └── L5: Answer Generation (rewoo.py:98)
│   ├── L3: Reflexion Agent (reflexion.py)
│   │   ├── L4: Initial Responder (reflexion.py:54)
│   │   │   ├── L5: Answer Generation (reflexion.py:56)
│   │   │   ├── L5: Reflection (reflexion.py:58)
│   │   │   └── L5: Search Query Generation (reflexion.py:60)
│   │   ├── L4: Revisor (reflexion.py:82)
│   │   │   ├── L5: Answer Generation (reflexion.py:84)
│   │   │   ├── L5: Reflection (reflexion.py:86)
│   │   │   └── L5: Search Query Generation (reflexion.py:88)
│   │   └── L4: Tool Execution (reflexion.py:124)
│   │       ├── L5: Tavily Search (reflexion.py:126)
│   │       └── L5: Result Storage (reflexion.py:128)
│   ├── L3: LLMCompiler Agent (LLMCompiler.py)
│   │   ├── L4: Planner (LLMCompiler.py:48)
│   │   │   ├── L5: Task Generation (LLMCompiler.py:50)
│   │   │   └── L5: Variable Substitution (LLMCompiler.py:52)
│   │   ├── L4: Task Fetching Unit (LLMCompiler.py:102)
│   │   │   ├── L5: Task Scheduling (LLMCompiler.py:104)
│   │   │   └── L5: Task Execution (LLMCompiler.py:106)
│   │   └── L4: Joiner (LLMCompiler.py:174)
│   │       ├── L5: Decision Making (LLMCompiler.py:176)
│   │       └── L5: Replanning (LLMCompiler.py:178)
│   ├── L3: Plan-and-Execute Agent (plan-and-execute.py)
│   │   ├── L4: Planner (plan-and-execute.py:74)
│   │   │   ├── L5: Plan Generation (plan-and-execute.py:76)
│   │   └── L4: Execution Agent (plan-and-execute.py:54)
│   │       ├── L5: Task Execution (plan-and-execute.py:56)
│   │       └── L5: Result Storage (plan-and-execute.py:58)
│   └── L3: Web Voyager (web_voyager.py)
│       ├── L4: Browser Annotations (web_voyager.py:74)
│       │   ├── L5: Screenshot Capture (web_voyager.py:76)
│       │   └── L5: Bounding Box Generation (web_voyager.py:78)
│       ├── L4: Agent (web_voyager.py:104)
│       │   ├── L5: Action Selection (web_voyager.py:106)
│       │   └── L5: Action Execution (web_voyager.py:108)
│       ├── L4: Tool Execution (web_voyager.py:154)
│       │   ├── L5: Click (web_voyager.py:156)
│       │   ├── L5: Type (web_voyager.py:161)
│       │   ├── L5: Scroll (web_voyager.py:166)
│       │   ├── L5: Wait (web_voyager.py:178)
│       │   ├── L5: Go Back (web_voyager.py:182)
│       │   └── L5: Go to Google (web_voyager.py:186)
│       └── L4: Scratchpad Update (web_voyager.py:194)
├── L2: Multi-Step Agents (sql-agent.py, storm.py, usaco.py)
│   ├── L3: SQL Agent (sql-agent.py)
│   │   ├── L4: List Tables Tool (sql-agent.py:100)
│   │   ├── L4: Get Schema Tool (sql-agent.py:105)
│   │   ├── L4: DB Query Tool (sql-agent.py:114)
│   │   │   ├── L5: Query Execution (sql-agent.py:116)
│   │   │   └── L5: Error Handling (sql-agent.py:118)
│   │   └── L4: Query Check (sql-agent.py:123)
│   │       ├── L5: LLM Query Checker (sql-agent.py:125)
│   │       └── L5: Query Correction (sql-agent.py:127)
│   ├── L3: STORM Agent (storm.py)
│   │   ├── L4: Generate Initial Outline (storm.py:38)
│   │   ├── L4: Expand Topics (storm.py:62)
│   │   │   ├── L5: Related Topic Generation (storm.py:64)
│   │   │   └── L5: Wikipedia Retrieval (storm.py:66)
│   │   ├── L4: Generate Perspectives (storm.py:82)
│   │   │   ├── L5: Perspective Generation (storm.py:84)
│   │   │   └── L5: Perspective Description (storm.py:86)
│   │   ├── L4: Expert Dialog (storm.py:118)
│   │   │   ├── L5: Generate Question (storm.py:136)
│   │   │   └── L5: Generate Answer (storm.py:172)
│   │   │       ├── L6: Query Generation (storm.py:174)
│   │   │       └── L6: Answer Generation (storm.py:180)
│   │   ├── L4: Refine Outline (storm.py:214)
│   │   ├── L4: Generate Sections (storm.py:244)
│   │   │   ├── L5: Section Content Generation (storm.py:246)
│   │   │   └── L5: Subsection Content Generation (storm.py:248)
│   │   └── L4: Generate Final Article (storm.py:274)
│   ├── L3: USACO Agent (usaco.py)
│   │   ├── L4: Solver (usaco.py:104)
│   │   │   ├── L5: Code Generation (usaco.py:106)
│   │   │   └── L5: Reasoning (usaco.py:108)
│   │   ├── L4: Evaluate (usaco.py:128)
│   │   │   ├── L5: Test Case Execution (usaco.py:130)
│   │   │   └── L5: Result Formatting (usaco.py:142)
│   │   ├── L4: Retrieve Examples (usaco.py:204)
│   │   │   ├── L5: Example Retrieval (usaco.py:206)
│   │   │   └── L5: Example Formatting (usaco.py:208)
│   │   └── L4: Human-in-the-loop (usaco.py:274)
└── L2: Adaptive RAG Agents (langgraph_adaptive_rag.py, langgraph_crag.py, langgraph_self_rag.py)
    ├── L3: Adaptive RAG (langgraph_adaptive_rag.py)
    │   ├── L4: Question Router (langgraph_adaptive_rag.py:24)
    │   │   ├── L5: Routing Decision (langgraph_adaptive_rag.py:26)
    │   ├── L4: Retrieval Grader (langgraph_adaptive_rag.py:44)
    │   │   ├── L5: Relevance Assessment (langgraph_adaptive_rag.py:46)
    │   ├── L4: Generate (langgraph_adaptive_rag.py:64)
    │   │   ├── L5: RAG Generation (langgraph_adaptive_rag.py:66)
    │   ├── L4: Hallucination Grader (langgraph_adaptive_rag.py:84)
    │   │   ├── L5: Grounding Assessment (langgraph_adaptive_rag.py:86)
    │   ├── L4: Answer Grader (langgraph_adaptive_rag.py:104)
    │   │   ├── L5: Answer Assessment (langgraph_adaptive_rag.py:106)
    │   ├── L4: Question Re-writer (langgraph_adaptive_rag.py:124)
    │   │   ├── L5: Question Re-writing (langgraph_adaptive_rag.py:126)
    │   ├── L4: Web Search (langgraph_adaptive_rag.py:144)
    │   │   ├── L5: Search Execution (langgraph_adaptive_rag.py:146)
    │   └── L4: Retrieve (langgraph_adaptive_rag.py:164)
    │       ├── L5: Document Retrieval (langgraph_adaptive_rag.py:166)
    ├── L3: Corrective RAG (langgraph_crag.py)
    │   ├── L4: Retrieve (langgraph_crag.py:64)
    │   ├── L4: Grade Documents (langgraph_crag.py:84)
    │   │   ├── L5: Relevance Assessment (langgraph_crag.py:86)
    │   ├── L4: Generate (langgraph_crag.py:104)
    │   │   ├── L5: RAG Generation (langgraph_crag.py:106)
    │   ├── L4: Question Re-writer (langgraph_crag.py:124)
    │   │   ├── L5: Question Re-writing (langgraph_crag.py:126)
    │   ├── L4: Web Search (langgraph_crag.py:144)
    │   │   ├── L5: Search Execution (langgraph_crag.py:146)
    └── L3: Self-RAG (langgraph_self_rag.py)
        ├── L4: Retrieve (langgraph_self_rag.py:64)
        ├── L4: Grade Documents (langgraph_self_rag.py:84)
        │   ├── L5: Relevance Assessment (langgraph_self_rag.py:86)
        ├── L4: Generate (langgraph_self_rag.py:104)
        │   ├── L5: RAG Generation (langgraph_self_rag.py:106)
        ├── L4: Hallucination Grader (langgraph_self_rag.py:124)
        │   ├── L5: Grounding Assessment (langgraph_self_rag.py:126)
        ├── L4: Answer Grader (langgraph_self_rag.py:144)
        │   ├── L5: Answer Assessment (langgraph_self_rag.py:146)
        └── L4: Question Re-writer (langgraph_self_rag.py:164)
            ├── L5: Question Re-writing (langgraph_self_rag.py:166)

L1: Common Patterns
├── L2: Tool Execution (reflexion.py:124, rewoo.py:76, web_voyager.py:154)
│   ├── L3: Tavily Search (reflexion.py:126)
│   ├── L3: Result Storage (reflexion.py:128, rewoo.py:80)
│   ├── L3: Click (web_voyager.py:156)
│   ├── L3: Type (web_voyager.py:161)
│   ├── L3: Scroll (web_voyager.py:166)
│   ├── L3: Wait (web_voyager.py:178)
│   ├── L3: Go Back (web_voyager.py:182)
│   └── L3: Go to Google (web_voyager.py:186)
├── L2: Tool Selection (rag-agent-testing.py:112, rewoo.py:42, rag-agent-testing.py:214)
│   ├── L3: LLM Grader (rag-agent-testing.py:110, rag-agent-testing.py:212)
│   └── L3: Variable Substitution (rewoo.py:44)
├── L2: Answer Generation (reflexion.py:56, rewoo.py:98, reflexion.py:84)
│   ├── L3: Reflection (reflexion.py:58, reflexion.py:86)
│   └── L3: Search Query Generation (reflexion.py:60, reflexion.py:88)
├── L2: Retrieval (rag-agent-testing.py:192, langgraph_adaptive_rag.py:164, langgraph_crag.py:64, langgraph_self_rag.py:64)
│   ├── L3: Document Retrieval (langgraph_adaptive_rag.py:166)
│   └── L3: Relevance Assessment (langgraph_crag.py:86, langgraph_self_rag.py:86)
├── L2: Grade Documents (rag-agent-testing.py:210, langgraph_crag.py:84, langgraph_self_rag.py:84)
│   ├── L3: LLM Grader (rag-agent-testing.py:212)
│   └── L3: Grounding Assessment (langgraph_self_rag.py:126)
├── L2: Question Re-writing (langgraph_adaptive_rag.py:126, langgraph_crag.py:126, langgraph_self_rag.py:166)
│   ├── L3: Search Execution (langgraph_adaptive_rag.py:146, langgraph_crag.py:146)
│   └── L3: Answer Assessment (langgraph_self_rag.py:146)
└── L2: RAG Generation (langgraph_adaptive_rag.py:66, langgraph_crag.py:106, langgraph_self_rag.py:106)
    ├── L3: Related Topic Generation (storm.py:64)
    └── L3: Wikipedia Retrieval (storm.py:66)

L1: Human-in-the-Loop
├── L2: Breakpoints (breakpoints.py, wait-user-input.py)
│   ├── L3: Interrupt Before (breakpoints.py, wait-user-input.py)
│   └── L3: Update State (breakpoints.py, wait-user-input.py)
├── L2: Time Travel (time-travel.py)
│   ├── L3: Get State History (time-travel.py)
│   └── L3: Replay State (time-travel.py)
└── L2: Edit Graph State (edit-graph-state.py)
    ├── L3: Update State (edit-graph-state.py)
    └── L3: Review Tool Calls (review-tool-calls.py)

L1: Memory
├── L2: Conversation History (add-summary-conversation-history.py, manage-conversation-history.py)
│   ├── L3: Summarize Conversation (add-summary-conversation-history.py)
│   └── L3: Delete Messages (delete-messages.py)
└── L2: Checkpointing (time-travel.py, breakpoints.py, edit-graph-state.py, wait-user-input.py)
    ├── L3: Memory Saver (time-travel.py, breakpoints.py, edit-graph-state.py, wait-user-input.py)
    └── L3: Thread ID (time-travel.py, breakpoints.py, edit-graph-state.py, wait-user-input.py)

L1: LLM Compiler
├── L2: Output Parser (output_parser.py)
│   ├── L3: Parse Task (output_parser.py)
│   └── L3: Instantiate Task (output_parser.py)
└── L2: Math Tools (math_tools.py)
    ├── L3: Execute Code (math_tools.py)
    └── L3: Evaluate Expression (math_tools.py)

L1: LATS
├── L2: Tree State (lats.py)
│   ├── L3: Node (lats.py)
│   │   ├── L4: Upper Confidence Bound (lats.py)
│   │   ├── L4: Backpropagate (lats.py)
│   │   ├── L4: Get Messages (lats.py)
│   │   ├── L4: Get Trajectory (lats.py)
│   │   ├── L4: Get Best Solution (lats.py)
│   │   └── L4: Mark Tree as Solved (lats.py)
│   └── L3: Reflection (lats.py)
│       ├── L4: As Message (lats.py)
│       └── L4: Normalized Score (lats.py)
└── L2: Language Agent (lats.py)
    ├── L3: Reflect (lats.py)
    ├── L3: Initial Response (lats.py)
    │   ├── L4: Generate Initial Candidate (lats.py)
    │   └── L4: Parse (lats.py)
    ├── L3: Expand (lats.py)
    │   ├── L4: Generate Candidates (lats.py)
    │   └── L4: Tool Executor (lats.py)
    └── L3: Should Loop (lats.py)

L1: Multi-Agent
├── L2: Agent Supervisor (agent_supervisor.py)
│   ├── L3: Create Agent (agent_supervisor.py)
│   ├── L3: Agent Node (agent_supervisor.py)
│   └── L3: Create Team Supervisor (agent_supervisor.py)
└── L2: Hierarchical Agent Teams (hierarchical_agent_teams.py)
    ├── L3: Create Agent (hierarchical_agent_teams.py)
    ├── L3: Agent Node (hierarchical_agent_teams.py)
    └── L3: Create Team Supervisor (hierarchical_agent_teams.py)

L1: Basic Multi-Agent
├── L2: Create Agent (multi-agent-collaboration.py)
├── L2: Agent Node (multi-agent-collaboration.py)
├── L2: Define Tools (multi-agent-collaboration.py)
│   ├── L3: Tavily Search (multi-agent-collaboration.py)
│   └── L3: Python REPL (multi-agent-collaboration.py)
└── L2: Define Graph (multi-agent-collaboration.py)
    ├── L3: Define State (multi-agent-collaboration.py)
    ├── L3: Define Agent Nodes (multi-agent-collaboration.py)
    │   ├── L4: Research Agent (multi-agent-collaboration.py)
    │   └── L4: Chart Generator (multi-agent-collaboration.py)
    ├── L3: Define Tool Node (multi-agent-collaboration.py)
    └── L3: Define Edge Logic (multi-agent-collaboration.py)

